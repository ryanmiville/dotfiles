// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "shift+cmd+e",
    "command": "revealInExplorer"
  },
  {
    "key": "cmd+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "cmd+g",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "cmd+g",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+g",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "cmd+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "cmd+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+e",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+g",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+g",
    "command": "workbench.scm.focus",
    "when": "editorTextFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.navigateRight",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.navigateLeft",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+w k",
    "command": "workbench.action.navigateAbove",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+w j",
    "command": "workbench.action.navigateBelow",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "shift+cmd+e",
    "command": "revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "git.openChange"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.toggleFullScreen"
  },
  {
    "key": "f2",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
  },
  {
    "key": "enter",
    "command": "explorer.openAndPassFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "shift+cmd+r",
    "command": "metals.test-current-target"
  },
  {
    "key": "f2",
    "command": "workbench.action.terminal.rename",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported"
  },
  {
    "key": "f2",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly && !terminalFocus"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+r",
    "command": "codelens.showLensesInCurrentLine",
    "when": "editorHasCodeLensProvider && editorTextFocus"
  },
  {
    "key": "cmd+e",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+w l",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+w h",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+w l",
    "when": "sideBarFocus",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextQuickFix",
    "when": "editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevQuickFix",
    "when": "editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "cmd+k n",
    "command": "notifications.focusToasts"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "tab",
    "command": "extension.vim_tab",
    "when": "!cpp.shouldAcceptTab && editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
  },
  {
    "key": "tab",
    "command": "-extension.vim_tab",
    "when": "!cpp.shouldAcceptTab && editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "x",
    "command": "magit.discard-at-point",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "k",
    "command": "-magit.discard-at-point"
  },
  {
    "key": "-",
    "command": "magit.reverse-at-point",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "v",
    "command": "-magit.reverse-at-point"
  },
  {
    "key": "shift+-",
    "command": "magit.reverting",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "shift+v",
    "command": "-magit.reverting"
  },
  {
    "key": "shift+o",
    "command": "magit.resetting",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "shift+x",
    "command": "-magit.resetting"
  },
  {
    "key": "x",
    "command": "-magit.reset-mixed"
  },
  {
    "key": "ctrl+u x",
    "command": "-magit.reset-hard"
  },
  {
    "key": "y",
    "command": "-magit.show-refs"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+h",
    "command": "file-browser.stepOut",
    "when": "inFileBrowser"
  },
  {
    "key": "ctrl+l",
    "command": "file-browser.stepIn",
    "when": "inFileBrowser"
  },
  {
    "key": "alt+cmd+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "-keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "alt+cmd+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+j",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+h",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+a",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "F3",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
      "id": "minimap",
      "value": [
        {
          "editor.minimap.enabled": true
        },
        {
          "editor.minimap.enabled": false
        }
      ]
    }
  },
  {
    "key": "ctrl+j",
    "command": "dance.modes.set.normal",
    "when": "editorTextFocus && dance.mode == 'insert'"
  },
  {
    "key": "ctrl+j",
    "command": "dance.modes.set.normal",
    "when": "editorTextFocus && dance.mode == 'visual'"
  },
  {
    "key": "ctrl+o",
    "command": "dance.modes.set.temporarily.normal",
    "when": "editorTextFocus && dance.mode == 'insert'"
  },
  {
    "key": "shift+x",
    "command": "dance.select.line.above.extend",
    "when": "editorTextFocus && (dance.mode == 'normal' || dance.mode == 'visual')"
  },
  {
    "key": "shift+;",
    "command": "-workbench.action.showCommands",
    "when": "editorTextFocus && dance.mode == 'normal'"
  },
  {
    "key": "shift+;",
    "command": "-workbench.action.showCommands",
    "when": "editorTextFocus && dance.mode == 'visual'"
  },
  {
    "key": "ctrl+j",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "ctrl+j",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+o",
    "command": "projectManager.listGitProjects#sideBarGit"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.navigateRight",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.navigateLeft",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w k",
    "command": "workbench.action.navigateUp",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w j",
    "command": "workbench.action.navigateBelow",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "key": "shift+cmd+o",
    "command": "-editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "shift+cmd+o",
    "command": "outline.focus"
  },
  {
    "key": "cmd+i",
    "command": "composerMode.agent"
  },
  {
    "key": "shift+l",
    "command": "-notebook.toggleLineNumbers",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+l",
    "command": "editor.action.inlineDiffs.nextDiffFile",
    "when": "editorTextFocus && vim.mode != 'Insert' && @inlineDiffs.nextDiffFile.hasInlineDiffsInAnyEditor"
  },
  {
    "key": "alt+l",
    "command": "-editor.action.inlineDiffs.nextDiffFile",
    "when": "editorTextFocus && @inlineDiffs.nextDiffFile.hasInlineDiffsInAnyEditor"
  },
  {
    "key": "shift+h",
    "command": "editor.action.inlineDiffs.previousDiffFile",
    "when": "editorTextFocus && vim.mode != 'Insert' && @inlineDiffs.previousDiffFile.hasInlineDiffsInAnyEditor"
  },
  {
    "key": "alt+h",
    "command": "-editor.action.inlineDiffs.previousDiffFile",
    "when": "editorTextFocus && @inlineDiffs.previousDiffFile.hasInlineDiffsInAnyEditor"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.nextEditor",
    "when": "!editorTextFocus || editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.previousEditor",
    "when": "!editorTextFocus || editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "alt+h",
    "command": "editor.action.inlineDiffs.previousDiffFile",
    "when": "editorTextFocus && vim.mode != 'Insert' && @inlineDiffs.previousDiffFile.hasInlineDiffsInAnyEditor"
  },
  {
    "key": "alt+l",
    "command": "editor.action.inlineDiffs.nextDiffFile",
    "when": "editorTextFocus && vim.mode != 'Insert' && @inlineDiffs.nextDiffFile.hasInlineDiffsInAnyEditor"
  }
]
