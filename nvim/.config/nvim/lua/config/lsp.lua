vim.lsp.enable({ "lua_ls" })

-- vim.api.nvim_create_autocmd("LspAttach", {
--     desc = "LSP actions",
--     callback = function(event)
--         local opts = { buffer = event.buf }

--         vim.keymap.set("n", "K", "<cmd>lua vim.lsp.buf.hover()<cr>", opts)
--         vim.keymap.set("n", "gd", "<cmd>lua vim.lsp.buf.definition()<cr>", opts)
--         vim.keymap.set("n", "gD", "<cmd>lua vim.lsp.buf.declaration()<cr>", opts)
--         vim.keymap.set("n", "gi", "<cmd>lua vim.lsp.buf.implementation()<cr>", opts)
--         vim.keymap.set("n", "go", "<cmd>lua vim.lsp.buf.type_definition()<cr>", opts)
--         vim.keymap.set("n", "gr", "<cmd>lua vim.lsp.buf.references()<cr>", opts)
--         vim.keymap.set("n", "gs", "<cmd>lua vim.lsp.buf.signature_help()<cr>", opts)
--         vim.keymap.set(
--             "n",
--             "<leader>vd",
--             "<cmd>lua vim.diagnostic.open_float()<cr>",
--             { desc = "View Diagnostics" }
--         )
--         vim.keymap.set("n", "<leader>rn", "<cmd>lua vim.lsp.buf.rename()<cr>", opts)
--         vim.keymap.set({ "n", "x" }, "<F3>", "<cmd>lua vim.lsp.buf.format({async = true})<cr>", opts)
--         vim.keymap.set("n", "<leader>ca", "<cmd>lua vim.lsp.buf.code_action()<cr>", opts)
--         vim.keymap.set(
--             "n",
--             "<leader>s",
--             require("telescope.builtin").lsp_document_symbols,
--             { buffer = event.buf, desc = "Find Document Symbols" }
--         )
--         vim.keymap.set(
--             "n",
--             "<leader>S",
--             require("telescope.builtin").lsp_dynamic_workspace_symbols,
--             { buffer = event.buf, desc = "Find Workspace Symbols" }
--         )
--     end,
-- })
-- 		})
